var app=angular.module("multidoc",["ui.router","jsonFormatter","LocalStorageModule","ui.bootstrap"]);app.config(function($stateProvider,$urlRouterProvider,$qProvider){$qProvider.errorOnUnhandledRejections(!1),$stateProvider.state("projectDetails",{url:"/project",views:{header:{templateUrl:"includes/top-navigation.html",controller:"HeaderController"},content:{templateUrl:"includes/project.html",controller:"projectCtrl"},navigation:{templateUrl:"includes/navigation.html",controller:"NavigationController"},footer:{templateUrl:"includes/footer.html"}}}).state("routeDetails",{url:"/route/:routeId/parents/:parents",views:{header:{templateUrl:"includes/top-navigation.html",controller:"HeaderController"},content:{templateUrl:"includes/route.html",controller:"RouteController"},navigation:{templateUrl:"includes/navigation.html",controller:"NavigationController"},footer:{templateUrl:"includes/footer.html",controller:"FooterController"}}}).state("tagSearch",{url:"/search/tags/",views:{header:{templateUrl:"includes/top-navigation.html",controller:"HeaderController"},content:{templateUrl:"includes/blank.html"},navigation:{templateUrl:"includes/navigation.html",controller:"NavigationController"},footer:{templateUrl:"includes/footer.html",controller:"FooterController"}}}).state("tagSearchRouteDetails",{url:"/search/tags/route/:routeId/parents/:parents",views:{header:{templateUrl:"includes/top-navigation.html",controller:"HeaderController"},content:{templateUrl:"includes/route.html",controller:"RouteController"},navigation:{templateUrl:"includes/navigation.html",controller:"NavigationController"},footer:{templateUrl:"includes/footer.html",controller:"FooterController"}}}).state("missingConfig",{url:"/error/config",views:{content:{templateUrl:"includes/error.html"}}}),$urlRouterProvider.otherwise("/project")}),app.filter("trust",["$sce",function($sce){return function(htmlCode){return $sce.trustAsHtml(htmlCode)}}]),String.prototype.hashCode=function(){var hash=0;if(0==this.length)return hash;for(i=0;i<this.length;i++)char=this.charCodeAt(i),hash=(hash<<5)-hash+char,hash&=hash;return hash},app.controller("FooterController",["$scope","$rootScope","tagService","stateService",function($scope,$rootScope,tagService,stateService){$scope.tagList=tagService.getTagList(),$scope.$on("tagListChanged",function(event,tagList){$scope.tagList=tagList,tagService.saveTagList($scope.tagList)}),$scope.removeTag=function(tag){$scope.tagList.splice($scope.tagList.indexOf(tag),1),tagService.saveTagList($scope.tagList),$rootScope.$broadcast("tagListChanged",$scope.tagList),0==$scope.tagList.length&&$rootScope.$broadcast("goToProjectDetails",!0)},$scope.runTagSearch=function(){$rootScope.$broadcast("runTagSearch"),stateService.is("routeDetails")&&stateService.saveCurrentState()},$scope.clearTagSearch=function(){tagService.saveTagList([]),$scope.tagList=[],stateService.is("routeDetails")||stateService.loadLastState()}}]),app.controller("HeaderController",["$scope","projectService","routeService","$stateParams","$state","$rootScope","localStorageService",function($scope,projectService,routeService,$stateParams,$state,$rootScope,localStorageService){$scope.project=new Project,$scope.route={},$scope.authorization={header:"Authorization",token:""},$scope.environment={},localStorageService.get("authorization")&&($scope.authorization=localStorageService.get("authorization")),localStorageService.get("environment")&&($scope.environment=new Environment(localStorageService.get("environment"))),projectService.getProject().then(function(project){$scope.project=project,$scope.environment||($scope.environment=projectService.getEnvironmentByName($scope.project,"default"))}),$scope.sendAuthorizationChange=function(){localStorageService.set("authorization",$scope.authorization),$rootScope.$broadcast("authorizationChanged",$scope.authorization)},$scope.sendEnvironmentChange=function(){localStorageService.set("environment",$scope.environment),$rootScope.$broadcast("environmentChanged",$scope.environment)},$state.is("routeDetails")&&routeService.getRouteById($stateParams.routeId).then(function(route){$scope.route=route})}]),app.controller("NavigationController",["$scope","categoryService","visualHelper","$state","$stateParams","tagService",function($scope,categoryService,visualHelper,$state,$stateParams,tagService){if($scope.visualHelper=visualHelper,$scope.categoryList=[],$scope.selectedMenu="",$scope.tagList=tagService.getTagList(),$scope.isSearchResult=!1,$scope.getParentListFromState=function(){return $stateParams.parents.split("$").map(function(x){return parseInt(x,10)})},$state.is("projectDetails")&&($scope.selectedMenu="project_details",categoryService.getNavigationCategoryList([]).then(function(categoryList){$scope.categoryList=categoryList})),$state.is("routeDetails")){activeParentList=$scope.getParentListFromState();categoryService.getNavigationCategoryList(activeParentList).then(function(categoryList){$scope.categoryList=categoryList}),$scope.selectedMenu=$stateParams.routeId}if($state.is("tagSearch")&&($scope.isSearchResult=!0,$scope.selectedMenu="project_details",categoryService.getNavigationCategoryListByTagList($scope.tagList).then(function(categoryList){$scope.categoryList=categoryList})),$state.is("tagSearchRouteDetails")){$scope.isSearchResult=!0;var activeParentList=$scope.getParentListFromState();categoryService.getNavigationCategoryListByTagList($scope.tagList,activeParentList).then(function(categoryList){$scope.categoryList=categoryList}),$scope.selectedMenu=$stateParams.routeId}$scope.$on("tagListChanged",function(event,tagList){$scope.tagList=tagList}),$scope.$on("runTagSearch",function(){$state.go("tagSearch")}),$scope.$on("goToProjectDetails",function(){$state.go("projectDetails")}),$scope.toggleVisibility=function(category){if(category.hasCategoryList())for(var i=0;i<category.getCategoryListCount();i++)(category=category.getCategory(i)).setIsVisible(!category.isVisible());else for(i=0;i<category.getRouteListCount();i++){var route=category.getRoute(i);route.setIsVisible(!route.isVisible())}}}]),app.controller("projectCtrl",["$scope","projectService","$state",function($scope,projectService,$state){$scope.project=new Project,projectService.getProject().then(function(project){$scope.project=project},function(error){$state.go("missingConfig")})}]),app.controller("RouteController",["$scope","localStorageService","visualHelper","routeService","sandboxService","routeControllerHelper","tagService","$stateParams","$rootScope","$state",function($scope,localStorageService,visualHelper,routeService,sandboxService,routeControllerHelper,tagService,$stateParams,$rootScope,$state){$scope.testSandboxOutput={},$scope.sandboxOutput={},$scope.route={},$scope.originalRouteUrl="",$scope.sandboxRoute={},$scope.originalSandBoxRouteUrl="",$scope.sandboxRouteUriList=[],$scope.sandboxRoutePostList=[],$scope.visualHelper=visualHelper,$scope.sandboxService=sandboxService,$scope.authorization={},$scope.environment={},$scope.tagList=tagService.getTagList(),localStorageService.get("authorization")&&($scope.authorization=localStorageService.get("authorization")),$scope.$on("authorizationChanged",function(event,authorization){$scope.authorization=authorization}),$scope.parseUrl=function(){$scope.route.setUrl(sandboxService.parseEnvironment($scope.originalRouteUrl,$scope.environment)),$scope.sandboxRoute.setUrl(sandboxService.parseSandboxUrl($scope.originalSandBoxRouteUrl,$scope.sandboxRouteUriList,$scope.environment))},$scope.$on("environmentChanged",function(event,environment){$scope.environment=environment,$scope.parseUrl()}),($state.is("routeDetails")||$state.is("tagSearchRouteDetails"))&&routeService.getRouteById($stateParams.routeId).then(function(route){$scope.route=route,localStorageService.get("environment")&&($scope.environment=new Environment(localStorageService.get("environment"))),$scope.resetSandbox()}),$scope.validateAuthorization=function(route){if(route.needsAuthentication()&&(!angular.isDefined($scope.authorization.token)||0===$scope.authorization.token.length))throw"Route needs authorization"},$scope.runExample=function(route){try{$scope.validateAuthorization(route);var list=$scope.sandboxRoute.getPostParameterList(),sandboxRoutePostList=routeControllerHelper.convertPostParameterList(list);sandboxService.runExample(route,sandboxRoutePostList,$scope.authorization).then(function(reponse){$scope.testSandboxOutput=reponse})}catch(error){alert(error)}},$scope.clearExample=function(){$scope.testSandboxOutput={}},$scope.checkDefaultValue=function(postParam){!postParam.enabled&&postParam.has_default&&(postParam.value=postParam.default)},$scope.runSandbox=function(route,postParamList){try{$scope.validateAuthorization(route),sandboxService.runExample(route,postParamList,$scope.authorization).then(function(reponse){$scope.sandboxOutput=reponse})}catch(error){alert(error)}},$scope.resetSandbox=function(){$scope.sandboxOutput={},$scope.sandboxRoute=angular.copy($scope.route),$scope.originalRouteUrl=$scope.route.getUrl(),$scope.originalSandBoxRouteUrl=$scope.sandboxRoute.getUrl();var list=$scope.sandboxRoute.getUriParameterList();$scope.sandboxRouteUriList=routeControllerHelper.convertUriParameterList(list),list=$scope.sandboxRoute.getPostParameterList(),$scope.sandboxRoutePostList=routeControllerHelper.convertPostParameterList(list),$scope.parseUrl()},$scope.tagIsAlreadyAdded=function(tag){for(var i=0;i<$scope.tagList.length;i++)if($scope.tagList[i].getName()===tag.getName())return!0;return!1},$scope.addTag=function(tag){$scope.tagIsAlreadyAdded(tag)||($scope.tagList.push(tag),$rootScope.$broadcast("tagListChanged",$scope.tagList))}}]),app.service("categoryFactory",["routeFactory",function(routeFactory){this.buildListFromJson=function(routesJSON){for(var categories=[],i=0;i<routesJSON.length;i++){var category=new Category;category.setId(routesJSON[i].id),category.setName(routesJSON[i].name),void 0!==routesJSON[i].needsAuthentication&&category.setNeedsAuthentication(routesJSON[i].needsAuthentication),routesJSON[i].categoryList?(category.setCategoryList(this.buildListFromJson(routesJSON[i].categoryList)),category.setHasCategoryList(!0)):routesJSON[i].routes&&category.setRouteList(routeFactory.buildRouteListFromJson(routesJSON[i].routes,category)),categories.push(category)}return categories},this.buildNavigationListFromJson=function(routesJSON,parentIdList,level){var categories=[];void 0===level&&(level=0,parentIdList=[]),level+=1;for(var i=0;i<routesJSON.length;i++){var category=new NavigationCategory;if(category.setId(routesJSON[i].id),category.setName(routesJSON[i].name),void 0!==routesJSON[i].needsAuthentication&&category.setNeedsAuthentication(routesJSON[i].needsAuthentication),1==level?parentIdList=[category.getId()]:parentIdList.push(category.getId()),category.setParentIdList(angular.copy(parentIdList)),routesJSON[i].categoryList)category.setCategoryList(this.buildNavigationListFromJson(routesJSON[i].categoryList,parentIdList,level)),category.setHasCategoryList(!0);else if(routesJSON[i].routes){var routeList=routeFactory.buildNavigationRouteListFromJson(routesJSON[i].routes,category);category.setRouteList(routeList)}categories.push(category)}return categories}}]),app.service("paramFactory",function(){this.buildParamFromJson=function(paramJSON){var param=new Param;return param.setDescription(paramJSON.description),param.setType(paramJSON.type),param.setIsOptional(paramJSON.isOptional),param.setDataType(paramJSON.data_type),param.setExampleData(paramJSON.example),paramJSON.default&&(param.setHasDefaultValue(!0),param.setDefaultValue(paramJSON.default)),paramJSON.listOption&&(param.setHasPossibleValues(!0),param.setPossibleValues(paramJSON.listOption)),"json"==paramJSON.data_type?(param.setIsJsonParam(!0),paramJSON.name&&(param.setName(paramJSON.name),param.setHasName(!0))):param.setName(paramJSON.name),param},this.buildParamListFromJson=function(paramsJSON){for(var list=[],i=0;i<paramsJSON.length;i++)list.push(this.buildParamFromJson(paramsJSON[i]));return list}}),app.service("projectFactory",function(){this.buildEnvironment=function(envListJson){var env=new Environment;return env.setUrl(envListJson.url),env.setName(envListJson.name),env},this.buildEnvironmentList=function(envListJson){for(var list=[],i=0;i<envListJson.length;i++)list.push(this.buildEnvironment(envListJson[i]));return list},this.buildFromJson=function(projectJson){var project=new Project;return project.setName(projectJson.name),project.setDescription(projectJson.description),project.setVersion(projectJson.version),project.setBuildDate(projectJson.buildDate),projectJson.logo&&(project.setLogo(projectJson.logo),project.setHasLogo(!0)),projectJson.environments&&(project.setHasEnvironmentList(!0),project.setEnvironmentList(this.buildEnvironmentList(projectJson.environments))),project}}),app.service("responseFactory",function(){this.buildFromRequestResponse=function(response){var responseObj=new Response;return responseObj.setData(response.data),responseObj.setStatus(response.status),responseObj.setResponseHeaders(response.headers()),responseObj}}),app.service("routeFactory",["tagFactory","paramFactory",function(tagFactory,paramFactory){this.buildRouteFromJson=function(routesJSON,category){var route=new Route;return route.setName(routesJSON.name),route.setDescription(routesJSON.description),route.setUrl(routesJSON.url),route.setMethod(routesJSON.method.toUpperCase()),route.setId(routesJSON.id),routesJSON.tags&&route.setTagList(tagFactory.buildTagListFromJson(routesJSON.tags)),route.setNeedsAuthentication(category.needsAuthentication()),void 0!==routesJSON.needsAuthentication&&route.setNeedsAuthentication(routesJSON.needsAuthentication),routesJSON.params&&route.setParameterList(paramFactory.buildParamListFromJson(routesJSON.params)),route.setCategory(category),route},this.buildRouteListFromJson=function(routesJSON,category){for(var list=[],i=0;i<routesJSON.length;i++)list.push(this.buildRouteFromJson(routesJSON[i],category));return list},this.buildNavigationRouteFromJson=function(routesJSON,category){var route=new NavigationRoute;return route.setName(routesJSON.name),route.setDescription(routesJSON.description),route.setUrl(routesJSON.url),route.setMethod(routesJSON.method.toUpperCase()),route.setId(routesJSON.id),routesJSON.tags&&route.setTagList(tagFactory.buildTagListFromJson(routesJSON.tags)),route.setNeedsAuthentication(category.needsAuthentication()),void 0!==routesJSON.needsAuthentication&&route.setNeedsAuthentication(routesJSON.needsAuthentication),routesJSON.params&&route.setParameterList(paramFactory.buildParamListFromJson(routesJSON.params)),route.setCategory(category),route},this.buildNavigationRouteListFromJson=function(routesJSON,category){for(var list=[],i=0;i<routesJSON.length;i++)list.push(this.buildNavigationRouteFromJson(routesJSON[i],category));return list}}]),app.service("tagFactory",function(){this.buildTagFromJson=function(tagJSON){var tag=new Tag;return tag.setName(tagJSON),tag},this.buildTagListFromJson=function(tagsJSON){for(var list=[],i=0;i<tagsJSON.length;i++)list.push(this.buildTagFromJson(tagsJSON[i]));return list}}),app.service("routeControllerHelper",function(){this.convertUriParameterList=function(list){for(var paramList=[],i=0;i<list.length;i++)paramList.push({name:list[i].getName(),value:list[i].getExampleData(),required:!list[i].isOptional(),enabled:!0,has_default:list[i].hasDefaultValue(),default:list[i].getDefaultValue(),hasListValues:list[i].hasPossibleValues(),listValues:list[i].getPossibleValues()});return paramList},this.convertPostParameterList=function(list){for(var paramList=[],i=0;i<list.length;i++)paramList.push({name:list[i].getName(),value:list[i].getExampleData(),required:!list[i].isOptional(),enabled:!0,has_default:list[i].hasDefaultValue(),default:list[i].getDefaultValue(),hasListValues:list[i].hasPossibleValues(),listValues:list[i].getPossibleValues(),isJson:list[i].isJsonParam(),hasName:list[i].hasName()});return paramList}}),app.factory("transformRequestAsFormPost",function(){function transformRequest(data,getHeaders){return getHeaders()["Content-type"]="application/x-www-form-urlencoded; charset=utf-8",serializeData(data)}function serializeData(data){if(!angular.isObject(data))return null==data?"":data.toString();var buffer=[];for(var name in data)if(data.hasOwnProperty(name)){var value=data[name];buffer.push(encodeURIComponent(name)+"="+encodeURIComponent(null==value?"":value))}return buffer.join("&").replace(/%20/g,"+")}return transformRequest}),app.value("$sanitize",function(html){return html}),app.service("visualHelper",function(){this.getMethodColorByRoute=function(route){if(route instanceof Route||route instanceof NavigationRoute)switch(route.getMethod()){case"GET":return"primary";case"PUT":return"info";case"POST":return"success";case"PATCH":return"warning";case"DELETE":return"danger";default:return"default"}},this.addColorToUrlParameter=function(urlParam){return"<span class='label label-default'>"+urlParam+"</span>"},this.isAtLeastOneRouteVisible=function(category){for(var i=0;i<category.getRouteList().length;i++)if(category.getRoute(i).isVisible())return!0;return!1}});var Category=function(){this.id="",this.name="",this.routeList=[],this.categoryList=[],this.has_category_list=!1,this.needs_authentication=!1,this.setId=function(id){return this.id=id,this},this.getId=function(){return this.id},this.addRoute=function(route){return this.routeList.push(route),this},this.setRouteList=function(list){return this.routeList=list,this},this.getRouteList=function(){return this.routeList},this.getRoute=function(index){return this.routeList[index]},this.hasRouteList=function(){return this.routeList.length>0},this.setCategoryList=function(categoryList){return this.categoryList=categoryList,this},this.addCategory=function(category){return this.categoryList.push(category),this},this.getCategoryList=function(){return this.categoryList},this.getCategoryListCount=function(){return this.categoryList.length},this.getRouteListCount=function(){return this.routeList.length},this.hasCategoryList=function(){return this.has_category_list},this.setHasCategoryList=function(hasCatlist){return this.has_category_list=hasCatlist,this},this.setName=function(name){return this.name=name,this},this.getName=function(){return this.name},this.setNeedsAuthentication=function(isNeeded){return this.needs_authentication=isNeeded,this},this.needsAuthentication=function(){return this.needs_authentication}},Environment=function(){this.name="",this.url="",this.setName=function(name){return this.name=name,this},this.getName=function(){return this.name},this.setUrl=function(url){return this.url=url,this},this.getUrl=function(){return this.url};var me=this,p=arguments[0];p&&function(){for(var prop in p)me[prop]=p[prop]}()},NavigationCategory=function(){this.id="",this.name="",this.routeList=[],this.categoryList=[],this.has_category_list=!1,this.is_visible=!1,this.is_parent=!1,this.parentIdList=[],this.needs_authentication=!1,this.setId=function(id){return this.id=id,this},this.getId=function(){return this.id},this.addRoute=function(route){return this.routeList.push(route),this},this.setRouteList=function(list){return this.routeList=list,this},this.getRouteList=function(){return this.routeList},this.getRoute=function(index){return this.routeList[index]},this.removeRoute=function(index){return this.routeList.splice(index,1)},this.hasRouteList=function(){return this.routeList.length>0},this.setCategoryList=function(categoryList){return this.categoryList=categoryList,this},this.addCategory=function(category){return this.categoryList.push(category),this},this.getCategoryList=function(){return this.categoryList},this.getCategory=function(i){return this.categoryList[i]},this.getCategoryListCount=function(){return this.categoryList.length},this.getRouteListCount=function(){return this.routeList.length},this.hasCategoryList=function(){return this.has_category_list},this.setHasCategoryList=function(hasCatlist){return this.has_category_list=hasCatlist,this},this.setName=function(name){return this.name=name,this},this.getName=function(){return this.name},this.setIsVisible=function(isVisible){return this.is_visible=isVisible,this},this.isVisible=function(){return this.is_visible},this.setIsParent=function(isParent){return this.is_parent=isParent,this},this.isParent=function(){return this.is_parent},this.addParentId=function(parentId){return this.parentIdList.push(parentId),this},this.getParentIdList=function(){return this.parentIdList},this.setParentIdList=function(parentList){return this.parentIdList=parentList,this.parentIdList},this.setNeedsAuthentication=function(isNeeded){return this.needs_authentication=isNeeded,this},this.needsAuthentication=function(){return this.needs_authentication}},NavigationRoute=function(){this.id="",this.name="",this.description="",this.method="",this.tagList=[],this.parameterList=[],this.category={},this.url="",this.is_visible=!1,this.needs_authentication=!1,this.setId=function(id){return this.id=id,this},this.getId=function(){return this.id},this.setUrl=function(url){return this.url=url,this},this.getUrl=function(){return this.url},this.setName=function(name){return this.name=name,this},this.getName=function(){return this.name},this.setDescription=function(desc){return this.description=desc,this},this.getDescription=function(){return this.description},this.setMethod=function(method){return this.method=method,this},this.getMethod=function(){return this.method},this.setCategory=function(category){return this.category=category,this},this.getCategory=function(){return this.category},this.addTag=function(tag){return this.tagList.push(tag)},this.getTagList=function(){return this.tagList},this.setTagList=function(tagList){return this.tagList=tagList},this.getTag=function(i){return this.tagList[i]},this.getParameterList=function(){return this.parameterList},this.setParameterList=function(parameterList){return this.parameterList=parameterList},this.hasParameters=function(){return this.parameterList.length>0},this.getUriParameterList=function(){for(var list=[],i=0;i<this.parameterList.length;i++)"uri"==this.parameterList[i].getType()&&list.push(this.parameterList[i]);return list},this.getPostParameterList=function(){for(var list=[],i=0;i<this.parameterList.length;i++)"post"==this.parameterList[i].getType()&&list.push(this.parameterList[i]);return list},this.hasPostParameterList=function(){for(var i=0;i<this.parameterList.length;i++)if("post"==this.parameterList[i].getType())return!0;return!1},this.hasUriParameterList=function(){for(var i=0;i<this.parameterList.length;i++)if("uri"==this.parameterList[i].getType())return!0;return!1},this.setIsVisible=function(isVisible){return this.is_visible=isVisible,this},this.isVisible=function(){return this.is_visible},this.setNeedsAuthentication=function(isNeeded){return this.needs_authentication=isNeeded,this},this.needsAuthentication=function(){return this.needs_authentication}},Param=function(){this.name="",this.description="",this.type="",this.is_optional=!1,this.data_type="string",this.example_data="",this.defaultValue="",this.has_default_value=!1,this.possibleValueList=[],this.hasPossibleValueList=!1,this.isJson=!1,this.thisParamHasName=!1,this.setName=function(name){return this.name=name,this},this.getName=function(){return this.name},this.setDescription=function(desc){return this.description=desc,this},this.getDescription=function(){return this.description},this.setType=function(type){return this.type=type,this},this.getType=function(){return this.type},this.setIsOptional=function(isOpt){return this.is_optional=isOpt,this},this.isOptional=function(){return this.is_optional},this.setDataType=function(data){return this.data_type=data,this},this.getDataType=function(){return this.data_type},this.setExampleData=function(data){return this.example_data=data,this},this.getExampleData=function(){return this.example_data},this.setDefaultValue=function(value){return this.defaultValue=value,this},this.getDefaultValue=function(){return this.defaultValue},this.setHasDefaultValue=function(value){return this.has_default_value=value,this},this.hasDefaultValue=function(){return this.has_default_value},this.setPossibleValues=function(values){return this.possibleValueList=values,this},this.getPossibleValues=function(){return this.possibleValueList},this.hasPossibleValues=function(){return this.hasPossibleValueList},this.setHasPossibleValues=function(has){return this.hasPossibleValueList=has,this},this.setIsJsonParam=function(isJson){return this.isJson=isJson,this},this.isJsonParam=function(){return this.isJson},this.setHasName=function(hasName){return this.thisParamHasName=hasName,this},this.hasName=function(hasName){return this.thisParamHasName}},Project=function(){this.name="",this.description="",this.version=0,this.has_environments=!1,this.environmentList=[],this.has_logo=!1,this.logo="",this.setName=function(name){return this.name=name,this},this.getName=function(){return this.name},this.setEnvironmentList=function(envList){return this.environmentList=envList,this},this.addEnvironment=function(env){this.environmentList.push(env)},this.getEnvironmentList=function(){return this.environmentList},this.getEnvironment=function(i){return this.environmentList[i]},this.setHasEnvironmentList=function(hasEnv){return this.has_environments=hasEnv,this},this.hasEnvironmentList=function(){return this.has_environments},this.setLogo=function(logo){return this.logo=logo,this},this.getLogo=function(){return this.logo},this.setHasLogo=function(haslogo){return this.has_logo=haslogo,this},this.hasLogo=function(){return this.has_logo},this.setBuildDate=function(bd){return this.buildDate=bd,this},this.getBuildDate=function(){return this.buildDate},this.setVersion=function(ver){return this.version=ver,this},this.getVersion=function(){return this.version},this.setDescription=function(desc){return this.description=desc,this},this.getDescription=function(){return this.description}},Response=function(){this.reponseHeaders=[],this.data={},this.status=null,this.setData=function(data){return this.data=data,this},this.getData=function(){return this.data},this.setResponseHeaders=function(headers){return this.reponseHeaders=headers,this},this.getResponseHeaders=function(){return this.reponseHeaders},this.setStatus=function(status){return this.status=status,this},this.getStatus=function(){return this.status}},Route=function(){this.id="",this.name="",this.description="",this.method="",this.tagList=[],this.parameterList=[],this.category={},this.url="",this.needs_authentication=!1,this.setId=function(id){return this.id=id,this},this.getId=function(){return this.id},this.setUrl=function(url){return this.url=url,this},this.getUrl=function(){return this.url},this.setName=function(name){return this.name=name,this},this.getName=function(){return this.name},this.setDescription=function(desc){return this.description=desc,this},this.getDescription=function(){return this.description},this.setMethod=function(method){return this.method=method,this},this.getMethod=function(){return this.method},this.setCategory=function(category){return this.category=category,this},this.getCategory=function(){return this.category},this.addTag=function(tag){return this.tagList.push(tag)},this.getTagList=function(){return this.tagList},this.getTag=function(i){return this.tagList[i]},this.setTagList=function(tagList){return this.tagList=tagList},this.getParameterList=function(){return this.parameterList},this.setParameterList=function(parameterList){return this.parameterList=parameterList},this.hasParameters=function(){return this.parameterList.length>0},this.getUriParameterList=function(){for(var list=[],i=0;i<this.parameterList.length;i++)"uri"==this.parameterList[i].getType()&&list.push(this.parameterList[i]);return list},this.getPostParameterList=function(){for(var list=[],i=0;i<this.parameterList.length;i++)"post"==this.parameterList[i].getType()&&list.push(this.parameterList[i]);return list},this.hasPostParameterList=function(){for(var i=0;i<this.parameterList.length;i++)if("post"==this.parameterList[i].getType())return!0;return!1},this.hasUriParameterList=function(){for(var i=0;i<this.parameterList.length;i++)if("uri"==this.parameterList[i].getType())return!0;return!1},this.setNeedsAuthentication=function(isNeeded){return this.needs_authentication=isNeeded,this},this.needsAuthentication=function(){return this.needs_authentication}},Tag=function(){this.name="",this.setName=function(name){return this.name=name,this},this.getName=function(){return this.name};var me=this,p=arguments[0];p&&function(){for(var prop in p)me[prop]=p[prop]}()};app.service("categoryService",["$q","$http","categoryFactory",function($q,$http,categoryFactory){var self=this;this.getCategoryList=function(){var defer=$q.defer();return $http({method:"GET",url:"api_data/categories.json"}).then(function(response){defer.resolve(categoryFactory.buildListFromJson(response.data.categoryList))},function(response){defer.reject(response)}),defer.promise},this.markVisibleForNavigation=function(categoryList,visibleCategoryList,level,parentIdList){void 0===level&&(level=0,parentIdList=[]),level+=1;for(var i=0;i<categoryList.length;i++){var category=categoryList[i],showChildren=!1;1==level?(category.setIsVisible(!0),category.setIsParent(!1),parentIdList=[category.getId()],visibleCategoryList.length>0&&-1!==visibleCategoryList.indexOf(category.getId())&&(showChildren=!0)):(category.setIsParent(!0),parentIdList.push(category.getId()),-1!==visibleCategoryList.indexOf(category.getId())?(category.setIsVisible(!0),showChildren=!0):(category.setIsVisible(!1),showChildren=!1)),category.hasCategoryList()&&this.markVisibleForNavigation(category.getCategoryList(),visibleCategoryList,level,parentIdList),showChildren&&category.getRouteList().map(function(route){return route.setIsVisible(showChildren),route})}},this.markVisibleForSearch=function(categoryList){for(var i=0;i<categoryList.length;i++){var category=categoryList[i];category.setIsVisible(!0),category.getRouteList().map(function(route){return route.setIsVisible(!0),route}),category.hasCategoryList()&&this.markVisibleForSearch(category.getCategoryList())}},this.getNavigationCategoryList=function(visibleCategoryList){var defer=$q.defer();return $http({method:"GET",url:"api_data/categories.json"}).then(function(response){var categoryList=categoryFactory.buildNavigationListFromJson(response.data.categoryList,visibleCategoryList);self.markVisibleForNavigation(categoryList,visibleCategoryList),defer.resolve(categoryList)},function(response){defer.reject(response)}),defer.promise},this.routeHasTag=function(route,tag){for(var i=0;i<route.getTagList().length;i++)if(route.getTag(i).getName()==tag.getName())return!0;return!1},this.routeHasAllTags=function(route,tagList){for(var j=0;j<tagList.length;j++)if(!this.routeHasTag(route,tagList[j]))return!1;return!0},this.filterRoutesByTags=function(categoryList,tagList){for(var i=0;i<categoryList.length;i++){if(categoryList[i].hasRouteList()){for(var routeLength=categoryList[i].getRouteList().length,routeList=categoryList[i].getRouteList(),j=0;j<routeLength;j++)this.routeHasAllTags(categoryList[i].getRoute(j),tagList)||(routeList[j]=null);routeList=routeList.filter(function(n){return null!=n}),categoryList[i].setRouteList(routeList)}categoryList[i].hasCategoryList()&&this.filterRoutesByTags(categoryList[i].getCategoryList(),tagList)}},this.getNavigationCategoryListByTagList=function(tagList,parentIdList){var defer=$q.defer();return $http({method:"GET",url:"api_data/categories.json"}).then(function(response){var categoryList=categoryFactory.buildNavigationListFromJson(response.data.categoryList,[]);self.filterRoutesByTags(categoryList,tagList),parentIdList&&self.markVisibleForNavigation(categoryList,parentIdList),self.markVisibleForSearch(categoryList),defer.resolve(categoryList)},function(response){defer.reject(response)}),defer.promise}}]),app.service("projectService",["$q","$http","projectFactory",function($q,$http,projectFactory){this.getEnvironmentByName=function(project,name){for(var i=0;i<project.getEnvironmentList().length;i++)if(project.getEnvironment(i).getName()===name)return project.getEnvironment(i)},this.getProject=function(){var defer=$q.defer();return $http({method:"GET",url:"api_data/project.json"}).then(function(response){defer.resolve(projectFactory.buildFromJson(response.data))},function(response){defer.reject(response)}),defer.promise}}]),app.service("routeService",["$q","categoryService",function($q,categoryService){var self=this;this.findRouteInCategory=function(categoryList,routeId){for(var route=null,i=0;i<categoryList.length;i++)if(categoryList[i].hasRouteList()){for(var j=0;j<categoryList[i].getRouteList().length;j++)if((route=categoryList[i].getRoute(j)).getId()==routeId)return route}else if(null!=(route=this.findRouteInCategory(categoryList[i].getCategoryList(),routeId)))return route;return null},this.getRouteById=function(id){var defer=$q.defer();return categoryService.getCategoryList().then(function(categoryList){defer.resolve(self.findRouteInCategory(categoryList,id))},function(response){defer.reject(response)}),defer.promise}}]),app.service("sandboxService",["$q","$http","transformRequestAsFormPost","responseFactory",function($q,$http,transformRequestAsFormPost,responseFactory){this.parseUrl=function(url,parameters){for(var i=0;i<parameters.length;i++)"uri"==parameters[i].getType()&&(url=(url=url.replace("[/:"+parameters[i].getName()+"]","/"+parameters[i].getExampleData())).replace("[:"+parameters[i].getName()+"]",parameters[i].getExampleData()));return url},this.parseEnvironment=function(url,environment){if(environment instanceof Environment)return url.replace("{{environment}}",environment.getUrl())},this.parseSandboxUrl=function(url,parameters,environment){url=this.parseEnvironment(url,environment);for(var i=0;i<parameters.length;i++){var value=null,name=parameters[i].name,frontSlash=null!==(value=parameters[i].enabled?angular.copy(parameters[i].value).toString():null)&&value.length>0?"/":"",realValue=null===value?"":value;realValue='<span class="sandbox_uri_param">'+realValue+"</span>",url=(url=url.replace("[:"+name+"]",realValue)).replace("[/:"+name+"]",frontSlash+realValue)}return url},this.getEnabledPostVarList=function(postVarList){for(var list=[],i=0;i<postVarList.length;i++)postVarList[i].enabled&&(list[postVarList[i].name]=postVarList[i].value);return list},this.getJsonPostVar=function(postVarList){for(var i=0;i<postVarList.length;i++)if(!postVarList[i].hasName&&postVarList[i].isJson)return postVarList[i].value;return null},this.runExample=function(route,paramList,authorization){var defer=$q.defer(),headers={};if(route.needsAuthentication()&&(headers[authorization.header]=authorization.token),"POST"===route.getMethod()){var http={},params=this.getEnabledPostVarList(paramList),jsonParam=this.getJsonPostVar(paramList);null!==jsonParam?http=$http({headers:headers={"Content-Type":"application/json; charset=utf-8"},method:route.getMethod(),url:this.parseUrl(route.getUrl(),route.getParameterList()),data:JSON.parse(jsonParam)}):(headers["Content-Type"]="application/x-www-form-urlencoded; charset=utf-8",http=$http({transformRequest:transformRequestAsFormPost,headers:headers,method:route.getMethod(),url:this.parseUrl(route.getUrl(),route.getParameterList()),data:params})),http.then(function(response,status,headers){defer.resolve(responseFactory.buildFromRequestResponse(response))},function(response){defer.reject(response)})}else $http({headers:headers,method:route.getMethod(),url:this.parseUrl(route.getUrl(),route.getParameterList())}).then(function(response,status,headers){defer.resolve(responseFactory.buildFromRequestResponse(response))},function(response){defer.reject(response)});return defer.promise}}]),app.service("stateService",["$q","localStorageService","$state","$stateParams",function($q,localStorageService,$state,$stateParams){this.saveCurrentState=function(){localStorageService.set("beforeSearchStateParams",$stateParams),localStorageService.set("beforeSearchStateName",$state.current.name)},this.loadLastState=function(){var params=localStorageService.get("beforeSearchStateParams"),name=localStorageService.get("beforeSearchStateName");$state.go(name,params).then()},this.is=function(stateName){return $state.is(stateName)}}]),app.service("tagService",["$q","localStorageService",function($q,localStorageService){this.saveTagList=function(tagList){return localStorageService.set("tagList",tagList),tagList},this.getTagList=function(){var list=[],tagList=localStorageService.get("tagList");if(!angular.isObject(tagList))return[];for(var i=0;i<tagList.length;i++)list.push(new Tag(tagList[i]));return list}}]);